type User {
	user_id:   String! 
	user_type: String!
	first_name: String!    
	last_name:  String!     
	email:     String!     
	job_title: String!
	timezone:  String!     
}

input AddUsersInput {
	first_name: String!  
	last_name:  String!   
	email:     String!   
	job_title: String! 
	password:  String!   
	timezone:  String! 
	environment: String!
}

input ChangePasswordInput {
	password: String!    
}

# Logout uses access token derived from the refresh token. This removes all refresh tokens belonging to that user on logout.
extend type Query{
	logoutUser: String
}

extend type Mutation{
  updateDeactivateUser(userid: String! ): String
}

extend type Mutation {
  updateDeleteUser(userid: String!): String
}

extend type Mutation {
	"""
	Creating a user and attaching to an environment.
	+ **Route**: Private
	+ **Permission**: admin_platform, admin_environment (of env), 
	"""
  createUser(input: AddUsersInput): User
}

extend type Mutation {
  updateChangePassword(input: ChangePasswordInput): String
}